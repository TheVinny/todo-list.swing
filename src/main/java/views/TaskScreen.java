/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.text.SimpleDateFormat;
import java.util.Date;
import model.Project;
import model.Task;
import Controller.TaskDTO;
import java.text.ParseException;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoField;
import java.time.temporal.TemporalAccessor;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author vinny
 */
public class TaskScreen extends javax.swing.JDialog {
    TaskDTO Controller;
    Project project;
    String taskid;
    private boolean isEditing = false;
    public TaskScreen(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        Controller = new TaskDTO();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        iconTask = new javax.swing.JLabel();
        formDiv = new javax.swing.JPanel();
        titleInput = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionInput = new javax.swing.JTextArea();
        labelDescription = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        notesInput = new javax.swing.JTextArea();
        notesLabel = new javax.swing.JLabel();
        timeField = new javax.swing.JFormattedTextField();
        saveTaskButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        header.setBackground(new java.awt.Color(153, 0, 102));

        title.setBackground(new java.awt.Color(255, 255, 255));
        title.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("Tasks");

        iconTask.setIcon(new javax.swing.ImageIcon("C:\\Users\\vinny\\Documents\\NetBeansProjects\\mytodo\\src\\main\\java\\assets\\task.png")); // NOI18N

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(iconTask)
                .addContainerGap())
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(title)
                .addGap(28, 28, 28))
            .addComponent(iconTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        formDiv.setBackground(new java.awt.Color(255, 255, 255));

        titleInput.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Title", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jScrollPane1.setAutoscrolls(true);

        descriptionInput.setColumns(20);
        descriptionInput.setLineWrap(true);
        descriptionInput.setRows(5);
        descriptionInput.setAutoscrolls(false);
        jScrollPane1.setViewportView(descriptionInput);

        labelDescription.setText("Description: ");

        jScrollPane2.setAutoscrolls(true);

        notesInput.setColumns(20);
        notesInput.setLineWrap(true);
        notesInput.setRows(5);
        notesInput.setAutoscrolls(false);
        jScrollPane2.setViewportView(notesInput);

        notesLabel.setText("Notes");

        timeField.setBorder(javax.swing.BorderFactory.createTitledBorder("Time"));
        timeField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));

        javax.swing.GroupLayout formDivLayout = new javax.swing.GroupLayout(formDiv);
        formDiv.setLayout(formDivLayout);
        formDivLayout.setHorizontalGroup(
            formDivLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formDivLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formDivLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(titleInput)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addGroup(formDivLayout.createSequentialGroup()
                        .addGroup(formDivLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDescription)
                            .addComponent(notesLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(timeField))
                .addContainerGap())
        );
        formDivLayout.setVerticalGroup(
            formDivLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formDivLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleInput, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        saveTaskButton.setBackground(new java.awt.Color(204, 82, 87));
        saveTaskButton.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        saveTaskButton.setText("Salvar");
        saveTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveTaskButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(formDiv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(saveTaskButton)))
                .addContainerGap())
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formDiv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveTaskButton))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTaskButtonActionPerformed

        try {
             if (titleInput.getText().isEmpty()) {
               JOptionPane.showMessageDialog(rootPane, "Insira o nome da Task");
               return;
             }
             if (timeField.getText().isEmpty()) {
               JOptionPane.showMessageDialog(rootPane, "Insira o prazo da task");
               return;
             }
            Task task = new Task();
            
            task.setProject_id(project.getId());
            
            task.setName(titleInput.getText());
            
            task.setDescription(descriptionInput.getText());
            
            task.setNotes(notesInput.getText());
            
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            
            Date deadline = null;
            
            deadline = format.parse(timeField.getText());
            
            task.setDeadline(deadline);
            
            System.out.print(task.getName());
            
            if(isEditing){
                
              task.setId(taskid);
              
              Controller.Update(task);
              
              JOptionPane.showMessageDialog(rootPane, "sucess on update");
              
            }
            else{
                
              JOptionPane.showMessageDialog(rootPane, "sucess on save");
              
              Controller.Save(task);
            }
            
        } catch (Exception e) {
            throw new RuntimeException(e);
//            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
        this.dispose();
    }//GEN-LAST:event_saveTaskButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TaskScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TaskScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TaskScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TaskScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TaskScreen dialog = new TaskScreen(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JTextArea descriptionInput;
    private javax.swing.JPanel formDiv;
    private javax.swing.JPanel header;
    private javax.swing.JLabel iconTask;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelDescription;
    private javax.swing.JTextArea notesInput;
    private javax.swing.JLabel notesLabel;
    private javax.swing.JButton saveTaskButton;
    private javax.swing.JFormattedTextField timeField;
    private javax.swing.JLabel title;
    private javax.swing.JTextField titleInput;
    // End of variables declaration//GEN-END:variables

    public void setProject(Project project, String taskid) {
        this.project = project;
        this.taskid = taskid;
    }
    
    public void setProject(Project project) {
        this.project = project;
    }
    
    public void setValues(Task task) {
        setIsEditing(true);
        titleInput.setText(task.getName());
        descriptionInput.setText(task.getDescription());
        notesInput.setText(task.getNotes());
        timeField.setText(task.getDeadline().toString());
        String day, month, year;
        
        DateTimeFormatter datetime = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        TemporalAccessor format = datetime.parse(timeField.getText().replace("-","/"));
        
        day = String.valueOf(format.get(ChronoField.DAY_OF_MONTH));
        
        month = String.valueOf(format.get(ChronoField.MONTH_OF_YEAR));
        
        year = String.valueOf(format.get(ChronoField.YEAR));
        
        if (format.get(ChronoField.DAY_OF_MONTH) < 10){
            
          day = "0".concat(day);
        }else{
          day = String.valueOf(format.get(ChronoField.DAY_OF_MONTH));
        }
        
        if (format.get(ChronoField.MONTH_OF_YEAR) < 10){
          month = "0".concat(month);
        }else{
          month = String.valueOf(format.get(ChronoField.MONTH_OF_YEAR));
        }
        timeField.setText(day + "/" + month + "/" + year);
        
    }

    public void setIsEditing(boolean isEditing) {
        this.isEditing = isEditing;
    }
    
}
